apiVersion: v1
kind: ConfigMap
metadata:
  name: bootstrap
  namespace: {{ .Values.namespace }}
data:
  bootstrap.sh: |
    # Check if the hostname contains "vault-0" to only run on vault leader
    if [[ "$(hostname)" == *vault-0* ]]; then
        # Set verbose mode for debugging
        set -x
        # Download aws-secrets-cli binary, this will need to be moved to artifactory
        wget -P /tmp https://github.com/Trev2689/aws-secrets-cli/releases/download/v2.0/aws-secrets-cli-linux
        chmod +x /tmp/aws-secrets-cli-linux
        # Set environment variables, as it's running inside vault no need for TLS
        export VAULT_ADDR=https://127.0.0.1:8200
        # Run the 'vault status' command and capture its output
        status_output=$(vault status)
        # Check if the output contains 'Initialized: true' , we need this to never reinit an initialized cluster
        if echo "$status_output" | grep -q "Initialized\s*true"; then
            # Vault is initialized
            echo "Vault is already initialized, no further action required"
        elif echo "$status_output" | grep -q "Initialized\s*false"; then
            # Vault is not initialized
            echo "Vault is not initialized, attempting to init and upload recovery keys to secrets manager"
            # Initialize Vault and save keys to /tmp/cluster-keys.json
            if vault operator init -format=json > /tmp/cluster-keys.json 2>&1; then
                # Run aws-secrets-cli tool
                if /tmp/aws-secrets-cli-linux -name "${secret_name}" -region "${region}" -description "Unseal key(s) and initial root token for Vault cluster ${cluster}" -json-file /tmp/cluster-keys.json -timeout 10s -update; then
                    # Check if the operation was successful
                    if grep -qE 'Successfully (created|updated)' /tmp/bootstrap.log; then
                        # Remove the JSON file if the operation was successful
                        rm /tmp/cluster-keys.json
                    else
                        # Something went wrong, keep the keys so we can take action
                        echo "Error: Operation failed. Check logs for details."
                    fi
                else
                    # Alert or log if the operation failed
                    echo "Error: aws-secrets-cli operation failed. Check logs for details."
                fi
            else
                echo "Error: Vault operator init command failed. Check logs for details."
            fi
        else
            # Unable to determine Vault status, handle error
            echo "Error: Unable to determine Vault status, exiting for safety, manual intervention required."
            exit 1
        fi
    fi
